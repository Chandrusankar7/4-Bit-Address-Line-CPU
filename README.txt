A typical CPU consists of Accumulator, Program Counters, ALU, Control Unit, Pointers, General Purpose registers, General Purpose IO ports, buses and clocks, trying to implement the components and instruction sets for the CPU is very tedious task, but using the HDL it can be implemented by with reduced complexity by covering all the corner cases, the FPGA on which the CPU has to be selected so that the FPGA is made of low switching device, so that the power consumption will be low and the time taken for execution of the code is also reduced. The general flow of a CPU instruction execution is opcode fetch, decode, execute, memory, writeback. In this project, I have designed a 4-bit CPU containing 4-bit address bus, 8-bit data bus containing a memory of (2^4)*8 of size. The RAM is of Simple Dual Port type. The opcode is of 4-bit length, so 16 different types of operations can be implemented in the design. The design is made using Verilog HDL, so that the designs can be made with less code complexity. The code is designed, synthesized and implemented using Vivado by generating bit-stream and uploading it on the connected BASYS-3 Artix-7 FPGA Trainer Board.
